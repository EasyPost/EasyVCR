name: CI

on:
  push:
    branches: [ master ]
  pull_request: ~

jobs:
  lint:
    runs-on: windows-2022
    steps:
      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format
      - uses: actions/checkout@v3
      - name: Check dotnet Style
        run: dotnet-format --check --exclude /
  NET_Tests:
    # derived from https://dev.to/felipetofoli/github-actions-for-net-full-framework-build-and-test-299h
    runs-on: windows-2022
    strategy:
      matrix:
        framework: [ 'net462', 'netcoreapp3.1', 'net5.0', 'net6.0' ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
        # install MSBuild, used to build the test project
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        # install NuGet.exe to restore required NuGet packages
      - name: Setup Nuget
        uses: NuGet/setup-nuget@v1.0.5
        # install Visual Studio's console test application, to execute tests
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1
        # Restore required NuGet packages
      - name: Restore NuGet Packages
        run: nuget restore EasyVCR.sln
        # Build the framework-specific test project
      - name: Build Solution
        run: msbuild EasyPost.EasyVCR.Tests\EasyPost.EasyVCR.Tests.csproj /p:platform="Any CPU" /p:configuration="Debug" /p:target="Rebuild" /p:TargetFramework="${{ matrix.framework }}" /p:outputPath="bin/GitHubCI/${{ matrix.framework }}" -restore
        # Run the framework-specific tests
      - name: Run Tests
        run: vstest.console.exe "EasyPost.EasyVCR.Tests\bin\GitHubCI\${{ matrix.framework }}\EasyPost.EasyVCR.Tests.dll"
